{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nconst fallbackLng = ['en'];\nconst availableLanguages = ['en', 'ar', 'fr'];\ni18n.use(Backend) // load translations using http (default                                               public/assets/locals/en/translations)\n.use(LanguageDetector) // detect user language\n.use(initReactI18next) // pass the i18n instance to react-i18next.\n.init({\n  fallbackLng,\n  // fallback language is english.\n  detection: {\n    checkWhitelist: true // options for language detection\n\n  },\n  debug: false,\n  whitelist: availableLanguages,\n  interpolation: {\n    escapeValue: false // no need for react. it escapes by default\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/home/shiva/Dropbox/dev_stuff/Real_Projects/777otto/src/i18nextConf.js"],"names":["i18n","initReactI18next","Backend","LanguageDetector","fallbackLng","availableLanguages","use","init","detection","checkWhitelist","debug","whitelist","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,MAAMC,WAAW,GAAG,CAAC,IAAD,CAApB;AACA,MAAMC,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAA3B;AAEAL,IAAI,CACDM,GADH,CACOJ,OADP,EACgB;AADhB,CAEGI,GAFH,CAEOH,gBAFP,EAEyB;AAFzB,CAGGG,GAHH,CAGOL,gBAHP,EAGyB;AAHzB,CAIGM,IAJH,CAIQ;AACJH,EAAAA,WADI;AACS;AAEbI,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,IADP,CACa;;AADb,GAHP;AAOJC,EAAAA,KAAK,EAAE,KAPH;AASJC,EAAAA,SAAS,EAAEN,kBATP;AAWJO,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP;AAXX,CAJR;AAoBA,eAAeb,IAAf","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nconst fallbackLng = ['en'];\nconst availableLanguages = ['en', 'ar', 'fr'];\n\ni18n\n  .use(Backend) // load translations using http (default                                               public/assets/locals/en/translations)\n  .use(LanguageDetector) // detect user language\n  .use(initReactI18next) // pass the i18n instance to react-i18next.\n  .init({\n    fallbackLng, // fallback language is english.\n\n    detection: {\n      checkWhitelist: true, // options for language detection\n    },\n\n    debug: false,\n\n    whitelist: availableLanguages,\n\n    interpolation: {\n      escapeValue: false, // no need for react. it escapes by default\n    },\n  });\n\nexport default i18n;"]},"metadata":{},"sourceType":"module"}